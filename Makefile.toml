[env]
CARGO_MAKE_WORKSPACE_EMULATION = true

[config]
main_project_member = "chuckle"
default_to_workspace = false

[tasks.setup]
script = '''
    echo # installing git hooks
    pre-commit --version || pip install pre-commit
    pre-commit install || echo "failed to install git hooks!" 1>&2

    echo # things required by `cargo make pre-commit`
    cargo install cargo-spellcheck

    echo # things required by sqlx
    cargo install sqlx-cli@0.7.2 --no-default-features --features native-tls,postgres

    echo # things required by `cargo make sort-deps`
    cargo install cargo-sort

    #echo # things required by `cargo make coverage`
    #rustup component add llvm-tools-preview
    #cargo install cargo-llvm-cov

    #echo # things required by `cargo make audit`
    #cargo install cargo-audit
'''

[tasks.lint]
command = "cargo"
args = [
    "clippy",
    "--tests",
    "--examples",
    "--all-targets",
    "--all-features",
    "--workspace",
]
env = { SQLX_OFFLINE = "true" }

[tasks.sort-deps]
command = "cargo"
args = [
    "sort",
    "--workspace",
    "--grouped"
]

[tasks.format]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.audit]
command = "cargo"
args = ["audit"]

[tasks.timings]
script = '''
    cargo clean
    cargo build --release --quiet --timings
    xdg-open /target/cargo-timings/cargo-timing.html
'''

[tasks.dev]
env = { RUST_LOG = "info" }
command = "cargo"
args = ["run", "--bin", "chuckle"]
watch = { watch = ["chuckle", "chuckle-gateway", "chuckle-interactions", "chuckle-util"] }

[tasks.commands-lockfile]
command = "cargo"
args = ["run", "--bin", "chuckle-interactions"]
